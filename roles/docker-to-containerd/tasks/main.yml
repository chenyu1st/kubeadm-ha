- name: 校验变量 container_manager
  assert:
    that: container_manager == "containerd"
    msg: "当前 container_manager 值为：{{ container_manager }}，请设置为 containerd。"

- name: 判断 Docker 是否运行
  shell: >
    systemctl is-active docker || echo "not running"
  register: docker_status

- block:
  - name: 停止 kubelet 服务
    service:
      name: kubelet
      state: stopped
      enabled: yes
  
  - name: 停止运行的容器
    ignore_errors: true
    shell: "docker stop $(docker ps -aq)"
    args:
      executable: /bin/bash
    register: stop_all_docker_containers
    retries: 5
    until: stop_all_docker_containers.rc == 0
    delay: 5
  
  - name: 清理 Docker 相关数据
    ignore_errors: true
    shell: "docker system prune -a -f --volumes"
    args:
      executable: /bin/bash
    register: remove_all_docker_data
    retries: 5
    until: remove_all_docker_data.rc == 0
    delay: 5
  
  - name: 停止 Docker.socket 服务
    service:
      name: docker.socket
      state: stopped
      enabled: no

  - name: 停止 Docker 服务
    service:
      name: docker
      state: stopped
      enabled: no

  - name: 停止 Containerd 服务
    service:
      name: containerd
      state: stopped
      enabled: no

  - name: 卸载 Docker 服务
    yum:
      name: 
      - "docker-ce"
      - "docker-ce-cli"
      - "containerd.io"
      state: absent
      enablerepo: docker-ce-stable
    when: ansible_distribution is regex ("AlmaLinux|Rocky|openEuler|CentOS|OracleLinux|RedHat|Anolis|Kylin.*|UOS.*")

  - name: 卸载 Docker 服务
    apt: 
      name:
      - "docker-ce"
      - "docker-ce-cli"
      - "containerd.io"
      state: absent
      allow_unauthenticated: true
    when: ansible_distribution in [ 'Ubuntu','Debian' ]

  - name: 清除 Docker 相关二进制文件及目录
    file: 
      name: "{{ item }}"
      state: absent
    with_items:
      - containerd
      - containerd-shim-runc-v2
      - ctr
      - docker
      - dockerd
      - docker-init
      - docker-proxy
      - runc
      - /etc/systemd/system/docker.service
      - /etc/systemd/system/docker.socket
      - /etc/systemd/system/containerd.service
      - /etc/containerd/config.toml
      - /etc/systemd/system/docker.service.d
      - /etc/docker

  when: docker_status.stdout == "active"

- include_tasks: "{{ (role_path + '/../prepare/container-engine/tasks/main.yml') | realpath  }}"

- name: 解析 /var/lib/kubelet/kubeadm-flags.env 配置文件
  shell: cat /var/lib/kubelet/kubeadm-flags.env | grep containerd.sock || echo "not find"
  register: kubeadm_flags_env_output

- block:
  - name: 更新 /var/lib/kubelet/kubeadm-flags.env 配置文件
    shell: >
      sed -i
      's;unix:///var/run/cri-dockerd.sock;unix:///var/run/containerd/containerd.sock;g'
      /var/lib/kubelet/kubeadm-flags.env
    args:
      warn: no
  
  - name: 启动 kubelet 服务
    service:
      name: kubelet
      state: restarted
      enabled: yes
  when: '"containerd.sock" not in kubeadm_flags_env_output.stdout'